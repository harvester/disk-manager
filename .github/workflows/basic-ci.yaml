name: Harvester-Node-Disk-Manager CI

# synchronize for pull request update
on:
  push:
    branches:
      - master
      - 'v**'
  pull_request:
    types: [opened, reopened, synchronize]

env:
  LIBVIRT_DEFAULT_URI: "qemu:///system"
  VM_DEPLOYED: false

jobs:
  validation:
    runs-on:
      - self-hosted
      - golang
    steps:
      - name: "Clone and check"
        uses: actions/checkout@v3
      - name: "Run validations"
        run: |
          make validate
          make validate-ci
  main_jobs:
    needs: validation
    runs-on:
      - self-hosted
      - golang
    steps:
      - name: "Clone and check"
        uses: actions/checkout@v3
      - name: "Build the Image for the Integration Test"
        run: |
          BUILD_FOR_CI=true make
          ./ci/scripts/patch-ttl-repo.sh
          echo "NDM override result as below:"
          cat ci/charts/ndm-override.yaml
      - name: "Local Deployment (Harvester+Longhorn+Node-Disk-Manager) for testing"
        id: vm_deploy
        run: |
          rm -rf ndm-vagrant-k3s
          git clone https://github.com/bk201/vagrant-k3s ndm-vagrant-k3s
          pushd ndm-vagrant-k3s
          yq e -i ".cluster_size = 1" settings.yaml
          ./new-cluster.sh
          echo "VM_DEPLOYED=true" >> "$GITHUB_ENV"
          yq e -i ".longhorn_version = \"1.6.3\"" settings.yaml
          ./scripts/deploy_longhorn.sh
          cp ../ci/scripts/deploy_ndm.sh ./deploy_ndm.sh
          ./deploy_ndm.sh
          popd
      - name: "Add disk"
        run: |
          pushd ndm-vagrant-k3s
          ./scripts/attach-disk.sh node1
          sleep 30
          popd
      - name: "Patch Image target (for upgrade)"
        run: |
          ./ci/scripts/patch-ttl-repo.sh
          echo "NDM override result as below:"
          cat ci/charts/ndm-override.yaml 
      - name: "Upgrade NDM"
        run: |
          pushd ndm-vagrant-k3s
          cp ../ci/scripts/upgrade_ndm.sh ./upgrade_ndm.sh
          ./upgrade_ndm.sh
          popd
      - name: "Run Basic Test"
        id: basic-test
        run: |
          pushd ndm-vagrant-k3s
          vagrant ssh-config node1 > ../ssh-config
          cp kubeconfig ../kubeconfig
          popd
          echo Running integration tests
          NDM_HOME=`pwd` go test -v ./tests/...
      - name: "Get NDM logs"
        if: always()
        run: |
          if [ ${{ env.VM_DEPLOYED }} != 'true' ]; then
            echo "VM is not deployed, skip getting logs"
            exit 0
          fi
          ./ci/scripts/get-debug-info.sh
      - name: "Tear Down / Cleanup"
        if: always()
        run: |
          if [ ${{ env.VM_DEPLOYED }} != 'true' ]; then
            echo "VM is not deployed, skip VM destroy"
            exit 0
          fi
          pushd ndm-vagrant-k3s
          vagrant destroy -f --parallel
          popd
